import db from '../database.js';
import { getAdminKeyboard } from '../keyboards/admin.js';
import { getMainKeyboard } from '../keyboards/main.js';
import { isAdmin } from '../utils/helpers.js';
import config from '../config.js';

export async function handleStart(ctx) {
    // const user = db.getUser(ctx.from.id);
    
    // if (!user) {
    //     await db.createUser(ctx.from);
    //     await sendWelcomeMessage(ctx, true);
    // } else {
    //     await sendWelcomeMessage(ctx, false);
    // }
     const user = await db.getUser(ctx.from.id);

    if (!user) {
        await db.createUser(ctx.from);
    }
    if (isAdmin(ctx.from.id)) {
        await ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', {
        reply_markup: getAdminKeyboard()
    });
    } else {
        await ctx.reply(`üåø *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GreenHouse!* üåø\n\n–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å–≤–µ–∂–∏–µ –æ–≤–æ—â–∏, —Ñ—Ä—É–∫—Ç—ã –∏ –∑–µ–ª–µ–Ω—å –ø—Ä—è–º–æ —Å –≥—Ä—è–¥–∫–∏!`, {
        parse_mode: 'Markdown',
        reply_markup: { inline_keyboard: [[{ text: 'üöÄ –ù–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏', callback_data: 'start_shopping' }]] }
    });
    }
}

// export async function handleStartButton(ctx) {
//     await ctx.reply('–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º –ø–æ–∫—É–ø–∫–∏! üõçÔ∏è', {
//         reply_markup: { remove_keyboard: true }
//     });
    
//     await ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', {
//         reply_markup: getMainKeyboard()
//     });
// }

export async function handleMainMenu(ctx) {
    await ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', {
        reply_markup: getMainKeyboard()
    });
}